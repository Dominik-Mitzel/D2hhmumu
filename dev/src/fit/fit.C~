#include <iostream>
//#include "sWeights.h"
#include <cmath>
#include <iostream>
#include <TChain.h>
#include <TTree.h>
#include <TH1D.h>
#include <TH2D.h>
#include <TF1.h>
#include <TFile.h>
#include <TCanvas.h>
#include <TLorentzVector.h>
#include <TROOT.h>
#include <TStyle.h>
#include <TFitResult.h>
#include <TLegend.h>
#include <TNtuple.h>
#include "TRandom3.h"
#include <sstream>
#include <RooDataSet.h>
#include "RooGaussModel.h"
#include "RooExponential.h"
#include "RooChebychev.h"
#include "RooAddModel.h"
#include "RooPolynomial.h"
#include "RooTruthModel.h"
#include "RooFitResult.h"
#include "RooDecay.h"
#include "RooPlot.h"
#include "RooGaussian.h"
#include "RooDstD0BG.h"
#include "RooAddPdf.h"
#include "RooExtendPdf.h"
#include "RooDataHist.h"
#include "RooCBShape.h"
#include "RooCategory.h"
#include "RooFormulaVar.h"
#include "RooSimultaneous.h"
#include "RooHist.h"
#include "RooStats/SPlot.h"
#include "RooTreeDataStore.h"
#include "RooRealVar.h"
#include "RooDataSet.h"
#include "RooConstVar.h"
#include "RooGlobalFunc.h"
#include "RooProdPdf.h"
#include "RooJohnsonSU.cpp"

//#include "Tools.h"


using namespace std;
using namespace RooFit ;
using namespace RooStats;


void fit(){

  bool binned=true;
  bool sWeight=true;

  gStyle->SetOptStat(0);
  gStyle->SetTitleXSize(0.05);
  gStyle->SetTitleYSize(0.05);
  gStyle->SetTitleFont(42,"X");
  gStyle->SetTitleFont(42,"Y");
  gStyle->SetLabelFont(42,"X");
  gStyle->SetLabelFont(42,"Y");
  gStyle->SetLabelOffset(0.01,"X");
  gStyle->SetPadTickX(1);
  gStyle->SetPadTickY(1);
  TH1::SetDefaultSumw2();
  TH2::SetDefaultSumw2();

  ///Load file                                                                                                                                                                          
  TFile* file;
  TString pathToFile="/auto/data/mitzel/D2hhmumu/new/preselectedSamples/D2Kpimumu_MCtrainingSample.root";
  file= new TFile(pathToFile,"OPEN");
  TTree* tree = (TTree*) file->Get("DecayTree");
  tree->SetBranchStatus("*",0);
  tree->SetBranchStatus("Dst_DTF_D0_M",1);
  tree->SetBranchStatus("deltaM",1);

  ///Fill all needed variables in RooDataSet                                                                                                                                            
  ///---------------------------------------                                                                                                                                            

  RooRealVar D0_M("Dst_DTF_D0_M", "m(h h #mu #mu)", 1840., 1900.,"MeV");
  RooRealVar deltaM("deltaM","#delta m", 144,147,"MeV");
  RooArgList list =  RooArgList( D0_M,deltaM );
  RooDataSet* data = new RooDataSet("data", "data", tree, RooArgSet(D0_M,deltaM));
  RooDataSet* data_small = (RooDataSet*) data->reduce(SelectVars(RooArgSet(deltaM)));
  RooDataHist* data_binned = data_small->binnedClone();


  ///Define fit model                                                                                                                                                                   
  ///----------------                                                                                                                                                                   

  ///Signal model deltaM with 2 gaussians                                                                                                                                                                       
  ///-----------------------                                                                                                                                                            

  RooRealVar mean1("mu1", "mean1", 145,144.,146.);
  RooRealVar sigma1("sigma_{1}", "sigma1", 0.45,0.1,2.);
  RooGaussian Gauss1("Gauss1", "Gauss1", deltaM, mean1, sigma1);
  RooRealVar mean2("mu2", "mean2", 145.,144.,147.);
  RooRealVar sigma2("sigma_{2}", "sigma2", 0.45,0.1,3.);
  RooGaussian Gauss2("Gauss2", "Gauss2", deltaM, mean1, sigma2);
  RooRealVar sigma3("sigma_{3}", "sigma3", 0.45,0.01,3.);
  RooGaussian Gauss3("Gauss3", "Gauss3", deltaM, mean1, sigma3);

  RooRealVar xi("xi","xi",145,144,146);
  RooRealVar lambda("lambda","lambda",0.3,0.1,2);
  RooRealVar gamma("gamma","gamma",0.,-2,2);
  RooRealVar delta("delta","delta",0.3,0.,10);


  RooJohnsonSU deltaM_Johnson("J","Johnson SU distribution",deltaM,xi,lambda,gamma,delta);


  RooRealVar f_deltaM_sig("f_sig","fraction of CB in D0 mass sigal",0.8,0.,1.);
  RooRealVar f_deltaM_sig2("f_sig2","fraction of CB in D0 mass sigal",0.1,0.,1.);
  RooAddPdf PDF_deltaM_sig("PDF_deltaM_sig","signal PDF in deltaM",RooArgSet(Gauss1,Gauss2),RooArgSet(f_deltaM_sig));





  //better model

  RooRealVar mean_mD0_sig("mean_CB_mD0_sig","mean of signal CB ",1866,1860,1880);
  RooRealVar sigma_mD0_sig("sigma_CB_mD0_sig","mean of signal CB ",7.7,5,10);
  RooRealVar alpha_mD0_sig1("alpha_mD0_sig1","alpha1 signal CB",2.0,1.,5.);
  RooRealVar alpha_mD0_sig2("alpha_mD0_sig2","alpha2 signal CB",1.5,1.,5.);
  RooRealVar n_mD0_sig1("n_mD0_sig1","n1 signal CB",1.8,0.,15.);
  RooRealVar n_mD0_sig2("n_mD0_sig2","n2 signal CB",20.,0.,30.);

  RooCBShape CB_mD0_sig1("CB_mD0_sig1","crystall ball 1 in mD0 signal PDF",D0_M,mean_mD0_sig,sigma_mD0_sig,alpha_mD0_sig1,n_mD0_sig1);
  RooCBShape CB_mD0_sig2("CB_mD0_sig2","crystall ball 2 in mD0 signal PDF",D0_M,mean_mD0_sig,sigma_mD0_sig,alpha_mD0_sig2,n_mD0_sig2);

  RooRealVar f_mD0_sig("f_sig","fraction of CB in D0 mass signal",0.8,0.,1.);
  RooAddPdf PDF_mD0_sig("PDF_mD0_sig","signal PDF in mD0",RooArgSet(CB_mD0_sig1,CB_mD0_sig2),f_mD0_sig);

  //delta M alternative with double crystal ball
                                                                                                                                                                               
  RooRealVar mean_deltaM_sig("mean_CB_deltaM_sig","mean of signal CB ",144,145,146);
  RooRealVar sigma_deltaM_sig("sigma_CB_deltaM_sig","mean of signal CB ",0.1,0.1,3);
  RooRealVar alpha_deltaM_sig1("alpha_deltaM_sig1","alpha1 signal CB",2.0,0.,5.);
  RooRealVar alpha_deltaM_sig2("alpha_deltaM_sig2","alpha2 signal CB",1.5,0.,5.);
  RooRealVar n_deltaM_sig1("n_deltaM_sig1","n1 signal CB",0,0.,15.);
  RooRealVar n_deltaM_sig2("n_deltaM_sig2","n2 signal CB",0.,0.,30.);

  RooCBShape CB_deltaM_sig1("CB_deltaM_sig1","crystall ball 1 in deltaM signal PDF",deltaM,mean_deltaM_sig,sigma_deltaM_sig,alpha_deltaM_sig1,n_deltaM_sig1);
  RooCBShape CB_deltaM_sig2("CB_deltaM_sig2","crystall ball 2 in deltaM signal PDF",deltaM,mean_deltaM_sig,sigma_deltaM_sig,alpha_deltaM_sig2,n_deltaM_sig2);

  //  RooRealVar f_deltaM_sig("f_sig","fraction of CB in D0 mass signal",0.8,0.,1.);
  //RooAddPdf PDF_deltaM_sig("PDF_deltaM_sig","signal PDF in deltaM",RooArgSet(CB_deltaM_sig1,CB_deltaM_sig2),f_deltaM_sig);




  ///Background model                                                                                                                                                                   
  ///-------------------------                                                                                                                                                          

  ///peaking bkg                                                                                                                                                                           
  RooRealVar mean_bkg("mu_{bkg}", "mean_bkg", 1840.,1820.,1860.);
  RooRealVar sigma_bkg("sigma_{bkg}", "sigma_bkg", 28.5, 5., 70.);
  RooGaussian bkg_Gauss("bkg_Gauss", "bkg_Gauss", D0_M, mean_bkg, sigma_bkg);

  ///Exponential                                                                                                                                                                        
  RooRealVar exp_par("lambda","exp",0.003535,-1.,1.);
  RooExponential bkg_exp("bkg_exp","exponential background",D0_M,exp_par);

  ///bkg pdf                                                                                                                                                                            
  RooRealVar f_bkg("f_{bkg}", "background fraction", 0.11, 0., 1.);
  RooAddPdf bkg("bkg", "bkg", RooArgList(bkg_Gauss, bkg_exp), RooArgList(f_bkg));


  ///total pdf                                                                                                                                                                          
  ///----------------------                                                                                                                                                             
  RooRealVar n_sig("n_sig", "n_sig", data->numEntries()/2., 0., data->numEntries());
  RooRealVar n_bkg("n_bkg", "n_bkg", data->numEntries()/2. , 0., data->numEntries());

  RooAbsPdf* pdf=new RooAddPdf("pdf", "pdf", RooArgList(Gauss1,bkg), RooArgList(n_sig,n_bkg));
  RooProdPdf* model=new RooProdPdf("model","model",RooArgSet(PDF_mD0_sig,PDF_deltaM_sig));


  ///Fit                                                                                                                                                                                
  // RooFitResult *result;
  //if(binned) result = pdf->fitTo(*data_binned,Save(kTRUE),Extended());
  //else result = pdf->fitTo(*data,Save(kTRUE),Extended(),NumCPU(3));

  binned=false;
  RooFitResult *result;
  //result = Gauss2.fitTo(*data_binned,Save(kTRUE));
  result = deltaM_Johnson.fitTo(*data_small,Save(kTRUE),NumCPU(3));
  

cout << "result is --------------- "<<endl;
  result->Print();

  ///Plot                                                                                                                                                                               
  ///----------                                                                                                                                                                         
  TCanvas* c1= new TCanvas("");
  RooPlot* frame_m= D0_M.frame();
  frame_m->SetTitle("");
  data->plotOn(frame_m,Name("data"),MarkerSize(0.5),Binning(50));
  //pdf->plotOn(frame_m,Name("model"),LineColor(kBlack),LineWidth(2));
  //pdf->plotOn(frame_m,Components(Gauss1),LineColor(kBlue),LineStyle(kDashed),LineWidth(1));
  //pdf->plotOn(frame_m,Components(bkg),LineColor(kRed),LineStyle(kDashed),LineWidth(1));
  //pdf->paramOn(frame_m,Layout(0.6));
  //PDF_mD0_sig.plotOn(frame_m,LineColor(kBlue),LineStyle(kDashed),LineWidth(1)); 
  data->plotOn(frame_m,Name("data"),MarkerSize(0.5),Binning(50));
  frame_m->Draw();
  c1->Draw();
  c1->Print("massFit.eps");

  ///Plot                                                                                                                                                                               
  ///----------        
  
  TCanvas* c2= new TCanvas("");
  RooPlot* frame_m2= deltaM.frame();
  frame_m2->SetTitle("");
  data->plotOn(frame_m2,Name("data"),MarkerSize(0.5),Binning(50));
  //pdf->plotOn(frame_m,Name("model"),LineColor(kBlack),LineWidth(2));
  //pdf->plotOn(frame_m,Components(Gauss1),LineColor(kBlue),LineStyle(kDashed),LineWidth(1));
  //pdf->plotOn(frame_m,Components(bkg),LineColor(kRed),LineStyle(kDashed),LineWidth(1));
  //pdf->paramOn(frame_m,Layout(0.6));
  //plotOn(frame_m2,LineColor(kRed),LineStyle(kDashed),LineWidth(1));
  deltaM_Johnson.plotOn(frame_m2,LineColor(kRed),LineStyle(kDashed),LineWidth(1)); 
  data->plotOn(frame_m2,Name("data"),MarkerSize(0.5),Binning(50));
  frame_m2->Draw();
  c2->Draw();
  c2->Print("massFit2.eps");

  

}




